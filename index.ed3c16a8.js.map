{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,E,O,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,E,I,E,E,I,A,W,M,A,U,6I,G,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCKA,IAHI,EAGA,EAAQ,EAEN,EAAc,SAAS,aAAa,CAAC,UACrC,EAAY,SAAS,gBAAgB,CAAC,MACtC,EAAQ,SAAS,gBAAgB,CAAC,MAClC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,iBAErC,EAAQ,EAAE,CAQhB,SAAS,IACP,EAAa,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CAED,IACA,IAEA,IAAK,IAAI,EAAI,EAAG,EA9BL,EA8Be,IACxB,IAAK,IAAI,EAAI,EAAG,EA/BP,EA+BiB,IAAK,CAC7B,IAAM,EAAS,CAAU,CAAC,EAAE,CAAC,EAAE,CAE/B,EAAW,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,EAC1B,CAEJ,CAEA,SAAS,EAAW,CAAI,CAAE,CAAG,EAC3B,EAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar valueBoard;\nvar rows = 4;\nvar columns = 4;\nvar score = 0;\nvar buttonStart = document.querySelector(\".start\");\nvar fieldRows = document.querySelectorAll(\"tr\");\nvar cells = document.querySelectorAll(\"td\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar board = [];\n_to_consumable_array(fieldRows).forEach(function(row) {\n    var cell = row.querySelectorAll(\"td\");\n    board.push(cell);\n});\nfunction setGame() {\n    valueBoard = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    addNumber();\n    addNumber();\n    for(var i = 0; i < rows; i++)for(var j = 0; j < rows; j++){\n        var number = valueBoard[i][j];\n        updateCell(board[i][j], number);\n    }\n}\nfunction updateCell(cell, num) {\n    cell.classList.value = \"field-cell\";\n    if (num > 0) {\n        cell.textContent = num;\n        cell.classList.add(\"field-cell--\".concat(num));\n    } else if (num === 0) cell.textContent = \"\";\n}\nfunction createRandomNumber(num) {\n    return Math.floor(Math.random() * num);\n}\nfunction addNumber() {\n    if (!hasEmptyCell()) return;\n    var activeCell = false;\n    while(!activeCell){\n        var r = createRandomNumber(rows);\n        var c = createRandomNumber(columns);\n        if (valueBoard[r][c] === 0) {\n            var num = Math.random() <= 0.1 ? 4 : 2;\n            valueBoard[r][c] = num;\n            board[r][c].textContent = num;\n            board[r][c].classList.add(\"field-cell--\".concat(num));\n            activeCell = true;\n        }\n    }\n}\nfunction hasEmptyCell() {\n    for(var i = 0; i < rows; i++)for(var j = 0; j < columns; j++){\n        if (valueBoard[i][j] === 0) return true;\n    }\n    return false;\n}\ndocument.addEventListener(\"click\", function(ev) {\n    ev.preventDefault();\n    if (ev.target.closest(\".start\")) {\n        messageStart.classList.add(\"hidden\");\n        buttonStart.textContent = \"Restart\";\n        buttonStart.classList.add(\"restart\");\n        buttonStart.classList.remove(\"start\");\n        setGame();\n        document.addEventListener(\"keydown\", playGame);\n    } else if (ev.target.closest(\".restart\")) {\n        setGame();\n        score = 0;\n        document.querySelector(\".game-score\").textContent = score;\n    }\n});\nfunction hasAdjacentSameNumbers(data) {\n    for(var i = 0; i < rows; i++)for(var j = 0; j < columns; j++){\n        if (i < rows - 1 && data[i][j] === data[i + 1][j]) return true;\n        else if (j < columns - 1 && data[i][j] === data[i][j + 1]) return true;\n    }\n    return false;\n}\nfunction filterZero(data) {\n    var newRow = data.filter(function(num) {\n        return num !== 0;\n    });\n    return newRow;\n}\nfunction move(data) {\n    var flag = false;\n    var row = filterZero(data);\n    var rowStart = data;\n    for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) {\n        flag = true;\n        row[i] *= 2;\n        row[i + 1] = 0;\n        score += row[i];\n    }\n    row = filterZero(row);\n    while(row.length < columns)row.push(0);\n    if (rowStart.toString() !== row.toString()) flag = true;\n    return [\n        row,\n        flag\n    ];\n}\nfunction hasActions(actions) {\n    if (actions.includes(true)) addNumber();\n}\nfunction moveLeft() {\n    var actions = [];\n    var flag;\n    for(var r = 0; r < rows; r++){\n        var row = valueBoard[r];\n        var ref;\n        ref = _sliced_to_array(move(row), 2), row = ref[0], flag = ref[1], ref;\n        actions.push(flag);\n        valueBoard[r] = row;\n        for(var c = 0; c < columns; c++){\n            var number = valueBoard[r][c];\n            updateCell(board[r][c], number);\n        }\n    }\n    hasActions(actions);\n    checkLose();\n    checkWin();\n}\nfunction moveRight() {\n    var actions = [];\n    var flag;\n    for(var r = 0; r < rows; r++){\n        var row = valueBoard[r];\n        row.reverse();\n        var ref;\n        ref = _sliced_to_array(move(row), 2), row = ref[0], flag = ref[1], ref;\n        actions.push(flag);\n        valueBoard[r] = row.reverse();\n        for(var c = 0; c < columns; c++){\n            var number = valueBoard[r][c];\n            updateCell(board[r][c], number);\n        }\n    }\n    hasActions(actions);\n    checkLose();\n    checkWin();\n}\nfunction moveUp() {\n    var actions = [];\n    var flag;\n    for(var c = 0; c < columns; c++){\n        var column = [\n            valueBoard[0][c],\n            valueBoard[1][c],\n            valueBoard[2][c],\n            valueBoard[3][c]\n        ];\n        var ref;\n        ref = _sliced_to_array(move(column), 2), column = ref[0], flag = ref[1], ref;\n        actions.push(flag);\n        for(var r = 0; r < columns; r++){\n            valueBoard[r][c] = column[r];\n            var number = valueBoard[r][c];\n            updateCell(board[r][c], number);\n        }\n    }\n    hasActions(actions);\n    checkLose();\n    checkWin();\n}\nfunction moveDown() {\n    var actions = [];\n    var flag;\n    for(var c = 0; c < columns; c++){\n        var column = [\n            valueBoard[3][c],\n            valueBoard[2][c],\n            valueBoard[1][c],\n            valueBoard[0][c]\n        ];\n        var ref;\n        ref = _sliced_to_array(move(column), 2), column = ref[0], flag = ref[1], ref;\n        actions.push(flag);\n        column.reverse();\n        for(var r = 0; r < columns; r++){\n            valueBoard[r][c] = column[r];\n            var number = valueBoard[r][c];\n            updateCell(board[r][c], number);\n        }\n    }\n    hasActions(actions);\n    checkLose();\n    checkWin();\n}\nfunction checkWin() {\n    _to_consumable_array(cells).forEach(function(cell) {\n        if (cell.textContent === \"2048\") {\n            messageWin.classList.remove(\"hidden\");\n            document.removeEventListener(\"keydown\", playGame);\n            setTimeout(function() {\n                document.location.reload();\n            }, 5000);\n        }\n    });\n}\nfunction checkLose() {\n    if (!hasEmptyCell() && !hasAdjacentSameNumbers(valueBoard)) messageLose.classList.remove(\"hidden\");\n}\nfunction playGame(e) {\n    e.preventDefault();\n    switch(e.key){\n        case \"ArrowRight\":\n            moveRight();\n            break;\n        case \"ArrowLeft\":\n            moveLeft();\n            break;\n        case \"ArrowDown\":\n            moveDown();\n            break;\n        case \"ArrowUp\":\n            moveUp();\n            break;\n    }\n    document.querySelector(\".game-score\").textContent = score;\n}\n\n//# sourceMappingURL=index.ed3c16a8.js.map\n","\"use strict\";\n\nlet valueBoard;\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\n\nconst buttonStart = document.querySelector(\".start\");\nconst fieldRows = document.querySelectorAll(\"tr\");\nconst cells = document.querySelectorAll(\"td\");\nconst messageStart = document.querySelector(\".message-start\");\nconst messageWin = document.querySelector(\".message-win\");\nconst messageLose = document.querySelector(\".message-lose\");\n\nconst board = [];\n\n[...fieldRows].forEach((row) => {\n  const cell = row.querySelectorAll(\"td\");\n\n  board.push(cell);\n});\n\nfunction setGame() {\n  valueBoard = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  addNumber();\n  addNumber();\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < rows; j++) {\n      const number = valueBoard[i][j];\n\n      updateCell(board[i][j], number);\n    }\n  }\n}\n\nfunction updateCell(cell, num) {\n  cell.classList.value = `field-cell`;\n\n  if (num > 0) {\n    cell.textContent = num;\n    cell.classList.add(`field-cell--${num}`);\n  } else if (num === 0) {\n    cell.textContent = \"\";\n  }\n}\n\nfunction createRandomNumber(num) {\n  return Math.floor(Math.random() * num);\n}\n\nfunction addNumber() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let activeCell = false;\n\n  while (!activeCell) {\n    const r = createRandomNumber(rows);\n    const c = createRandomNumber(columns);\n\n    if (valueBoard[r][c] === 0) {\n      const num = Math.random() <= 0.1 ? 4 : 2;\n\n      valueBoard[r][c] = num;\n      board[r][c].textContent = num;\n      board[r][c].classList.add(`field-cell--${num}`);\n      activeCell = true;\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      if (valueBoard[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\ndocument.addEventListener(\"click\", (ev) => {\n  ev.preventDefault();\n\n  if (ev.target.closest(\".start\")) {\n    messageStart.classList.add(`hidden`);\n    buttonStart.textContent = \"Restart\";\n    buttonStart.classList.add(`restart`);\n    buttonStart.classList.remove(`start`);\n    setGame();\n    document.addEventListener(\"keydown\", playGame);\n  } else if (ev.target.closest(\".restart\")) {\n    setGame();\n    score = 0;\n    document.querySelector(\".game-score\").textContent = score;\n  }\n});\n\nfunction hasAdjacentSameNumbers(data) {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      if (i < rows - 1 && data[i][j] === data[i + 1][j]) {\n        return true;\n      } else if (j < columns - 1 && data[i][j] === data[i][j + 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction filterZero(data) {\n  const newRow = data.filter((num) => num !== 0);\n\n  return newRow;\n}\n\nfunction move(data) {\n  let flag = false;\n  let row = filterZero(data);\n  const rowStart = data;\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      flag = true;\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  if (rowStart.toString() !== row.toString()) {\n    flag = true;\n  }\n\n  return [row, flag];\n}\n\nfunction hasActions(actions) {\n  if (actions.includes(true)) {\n    addNumber();\n  }\n}\n\nfunction moveLeft() {\n  const actions = [];\n  let flag;\n\n  for (let r = 0; r < rows; r++) {\n    let row = valueBoard[r];\n\n    [row, flag] = move(row);\n    actions.push(flag);\n    valueBoard[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const number = valueBoard[r][c];\n\n      updateCell(board[r][c], number);\n    }\n  }\n\n  hasActions(actions);\n  checkLose();\n  checkWin();\n}\n\nfunction moveRight() {\n  const actions = [];\n  let flag;\n\n  for (let r = 0; r < rows; r++) {\n    let row = valueBoard[r];\n\n    row.reverse();\n    [row, flag] = move(row);\n    actions.push(flag);\n    valueBoard[r] = row.reverse();\n\n    for (let c = 0; c < columns; c++) {\n      const number = valueBoard[r][c];\n\n      updateCell(board[r][c], number);\n    }\n  }\n  hasActions(actions);\n  checkLose();\n  checkWin();\n}\n\nfunction moveUp() {\n  const actions = [];\n  let flag;\n\n  for (let c = 0; c < columns; c++) {\n    let column = [\n      valueBoard[0][c],\n      valueBoard[1][c],\n      valueBoard[2][c],\n      valueBoard[3][c],\n    ];\n\n    [column, flag] = move(column);\n    actions.push(flag);\n\n    for (let r = 0; r < columns; r++) {\n      valueBoard[r][c] = column[r];\n\n      const number = valueBoard[r][c];\n\n      updateCell(board[r][c], number);\n    }\n  }\n\n  hasActions(actions);\n  checkLose();\n  checkWin();\n}\n\nfunction moveDown() {\n  const actions = [];\n  let flag;\n\n  for (let c = 0; c < columns; c++) {\n    let column = [\n      valueBoard[3][c],\n      valueBoard[2][c],\n      valueBoard[1][c],\n      valueBoard[0][c],\n    ];\n\n    [column, flag] = move(column);\n    actions.push(flag);\n\n    column.reverse();\n\n    for (let r = 0; r < columns; r++) {\n      valueBoard[r][c] = column[r];\n\n      const number = valueBoard[r][c];\n\n      updateCell(board[r][c], number);\n    }\n  }\n  hasActions(actions);\n  checkLose();\n  checkWin();\n}\n\nfunction checkWin() {\n  [...cells].forEach((cell) => {\n    if (cell.textContent === \"2048\") {\n      messageWin.classList.remove(`hidden`);\n      document.removeEventListener(\"keydown\", playGame);\n\n      setTimeout(() => {\n        document.location.reload();\n      }, 5000);\n    }\n  });\n}\n\nfunction checkLose() {\n  if (!hasEmptyCell() && !hasAdjacentSameNumbers(valueBoard)) {\n    messageLose.classList.remove(`hidden`);\n  }\n}\n\nfunction playGame(e) {\n  e.preventDefault();\n\n  switch (e.key) {\n    case \"ArrowRight\":\n      moveRight();\n      break;\n    case \"ArrowLeft\":\n      moveLeft();\n      break;\n    case \"ArrowDown\":\n      moveDown();\n      break;\n    case \"ArrowUp\":\n      moveUp();\n      break;\n  }\n\n  document.querySelector(\".game-score\").textContent = score;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","value","err","_unsupported_iterable_to_array","_non_iterable_rest","TypeError","_to_consumable_array","_array_without_holes","_iterable_to_array","iter","from","_non_iterable_spread","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","valueBoard","score","buttonStart","document","querySelector","fieldRows","querySelectorAll","cells","messageStart","messageWin","messageLose","board","setGame","addNumber","j","number","updateCell","cell","num","classList","textContent","add","concat","createRandomNumber","Math","floor","random","hasEmptyCell","activeCell","r","c","filterZero","data","filter","move","flag","row","rowStart","hasActions","actions","includes","checkWin","forEach","remove","removeEventListener","playGame","setTimeout","location","reload","checkLose","hasAdjacentSameNumbers","rows","columns","e","preventDefault","key","moveRight","ref","reverse","moveLeft","moveDown","column","moveUp","addEventListener","ev","target","closest"],"version":3,"file":"index.ed3c16a8.js.map"}